@page
@model InfocommSolutionsProject.Pages.Category.IndexModel
@using Microsoft.AspNetCore.Http;

@{
    ViewData["Title"] = "Index";
}


<div class="container">
    <h1>Category</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by Category or Description or Category Name:
            <input type="text" name="SearchString" value="@Model.CurrentFilter" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-page="./Index">Back to full List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.categore[0].CategoryName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.categore[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.categore[0].CategoryFor)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.categore) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryFor)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.CategoryId">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.CategoryId">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.CategoryId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
 @*this one is the droplist when user choose any option it will redict to that pages base on the option value  *@
<form method="get" >
            <div class="col-3 pr-0">
               <label >Items per page</label> 
               <select onchange="location=this.value">
            @{
                
                           
                            string returnUrl = null;
                            returnUrl ??= Url.Content("~/");
                            var v1 = @returnUrl + "Category?sortOrder1=five";
                            var v2 = @returnUrl + "Category?sortOrder1=ten";
                            var v3 = @returnUrl + "Category?sortOrder1=fivete";
                            var v4 = @returnUrl + "Category?sortOrder1=hun";
               
                if (Convert.ToInt32(@HttpContext.Session.GetString("_userset")) == 5)
                {
                       
                        <option value=@v1>5</option >
                        <option value=@v2>10</option>
                        <option value=@v3>50</option>
                        <option value=@v4>100</option>
                }
                else if (Convert.ToInt32(@HttpContext.Session.GetString("_userset")) == 10)
                {
                        <option >10</option>
                        <option value=@v1>5</option >
                        <option value=@v3>50</option>
                        <option value=@v4>100</option>
                }
                else if (Convert.ToInt32(@HttpContext.Session.GetString("_userset")) == 50)
                {
                        <option value=@v3>50</option>
                        <option value=@v1>5</option >
                        <option value=@v2>10</option>
                        <option value=@v4>100</option>
                }
                else if (Convert.ToInt32(@HttpContext.Session.GetString("_userset")) == 100)
                {
                        <option value=@v4>100</option>
                        <option value=@v1>5</option >
                        <option value=@v2>10</option>
                        <option value=@v3>50</option>
                }
                else
                {
                    //@HttpContext.Session.GetString("_Name")
                        <option >Default : 10</option>
                        <option value=@v1>5</option >
                        <option value=@v2>10</option>
                        <option value=@v3>50</option>
                        <option value=@v4>100</option>
                }
            }
               </select>
            </div> 
</form>

@{
    var prevDisabled = !Model.categore.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.categore.HasNextPage ? "disabled" : "";

}


              <a asp-page="./Index" asp-route-pageIndex="@(Model.categore.PageIndex - 1)" asp-route-currentFilter="@(Model.CurrentFilter)" class="btn btn-primary @prevDisabled">
Previous    
</a>
<a asp-page="./Index" asp-route-pageIndex="@(Model.categore.PageIndex + 1)" asp-route-currentFilter="@(Model.CurrentFilter)" class="btn btn-primary @nextDisabled">
Next    
</a>
   
</div>

