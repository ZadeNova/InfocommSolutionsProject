@page
@model InfocommSolutionsProject.Pages.User_Management.DetailsModel

@{
    ViewData["Title"] = "Details";
}
<div class="container">
    <h1>Details of : @Model.account.Email </h1>

<div>
    <h4>Account</h4>
    <hr />
    <dl class="row" >
        <dt class="col-sm-2" style="color:pink" >
            @Html.DisplayNameFor(model => model.account.FirstName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.account.FirstName)
        </dd>
        <hr>
         <dt class="col-sm-2" style="color:pink;">
            @Html.DisplayNameFor(model => model.account.LastName)
        </dt>
         <dd class="col-sm-10" >
            @Html.DisplayFor(model => model.account.LastName)
        </dd>
        <hr>
         <dt class="col-sm-2" style="color:pink">
            @Html.DisplayNameFor(model => model.account.Address)
        </dt>
         <dd class="col-sm-10">
              @{
                    var address = Model.account.Address;
                    if (address == null)
                        address = "No address added";
                }
            @Html.DisplayFor(model =>address)
        </dd>
        <hr>
         <dt  class="col-sm-2" style="color:pink">
            @Html.DisplayNameFor(model => model.account.PostalCode)
        </dt>
        <dd class="col-sm-10">
             @{
                    var postcal = Model.account.PostalCode;
                    if (postcal == null)
                        postcal = "No Postcal Code  added";
                }
            @Html.DisplayFor(model =>postcal)
        </dd>
        <hr>
         <dt class="col-sm-2" style="color:pink">
            @Html.DisplayNameFor(model => model.account.Email)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.account.Email)
        </dd>
        <hr>
         <dt class="col-sm-2" style="color:pink">
            @Html.DisplayNameFor(model => model.account.EmailConfirmed)
        </dt>
         <dd class="col-sm-10">
                @{
                    var emailcfm = Model.account.EmailConfirmed;
                    var reply = "";
                    if (emailcfm == false)
                        reply = "Email yet to be confirm";
                    else
                        reply = "Email has been confirmed";
                }
            @Html.DisplayFor(model => reply)
        </dd>
        <hr>
        
        <dt class="col-sm-2"  style="color:pink">
            @Html.DisplayNameFor(model => model.account.PhoneNumber)
        </dt>

        <dd class="col-sm-10">
          @{
                    var phn = Model.account.PhoneNumber;
                    var phnreply = "";
                    if (phn == null)
                        phnreply = "No Phone Number has been added";
                }
            @Html.DisplayFor(model =>phnreply)
        </dd>
        <hr>

          <dt  class="col-sm-2" style="color:pink" >
            @Html.DisplayNameFor(model => model.account.PhoneNumberConfirmed)
        </dt>
        <dd class="col-sm-10" style="margin-left: 200px;">
         @{
                    var phncfm = Model.account.PhoneNumber;
                    var phncfmreply = "";
                    if (phncfm == null)
                        phncfmreply = "Phone Number yet to be comfirm";
                    else
                        phncfmreply = "Phone Number has to been comfirmed";
                }
            @Html.DisplayFor(model =>phncfmreply)
        </dd>
        <hr>

        <dt class="col-sm-2" style="color:pink">
            @Html.DisplayNameFor(model => model.account.TwoFactorEnabled)
        </dt>
         <dd class="col-sm-10">
          @{
                    var twofa = Model.account.TwoFactorEnabled;
                    var twofareply = "";
                    if (twofa == false)
                        twofareply = "2 factor Authentication is Not Enable";
                    else
                         twofareply = "2 factor Authentication is Enable";
                }
            @Html.DisplayFor(model => twofareply)
        </dd>
        <hr>

         <dt class="col-sm-2" style="color:pink">
            @Html.DisplayNameFor(model => model.account.LockoutEnabled)
        </dt>
         <dd class="col-sm-10">
                @{
                    var lckouten = Model.account.LockoutEnabled;
                    var lckoutenreply = "";
                    if (lckouten == false)
                        lckoutenreply = "Lockout is Enable";
                    else
                        lckoutenreply = "Lockout is Not Enable";
                }
            @Html.DisplayFor(model =>lckoutenreply)
        </dd>
        <hr>

          <dt class="col-sm-2" style="color:pink">
            @Html.DisplayNameFor(model => model.account.LockoutEnd)
        </dt>
         <dd class="col-sm-10">
          @{
                    var lckend = Model.account.LockoutEnd;
                    var lckenrely = "";
                    if (lckend == null)
                        lckenrely = "Nill";
                    else
                        lckenrely=Model.account.LockoutEnd.ToString();
                }
            @Html.DisplayFor(model => lckenrely)
        </dd>
        <hr>
       
        <dt class="col-sm-2"  style="color:pink">
            @Html.DisplayNameFor(model => model.account.AccessFailedCount)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.account.AccessFailedCount)
        </dd>
        <hr>
         <dt class="col-sm-2" style="color:pink">
            @Html.DisplayNameFor(model => model.account.AccountStatus)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.account.AccountStatus)
        </dd>

       <dt>
         <form method="post">
        <a asp-page="./Edit" asp-route-id="@Model.account?.Id">Edit</a> |
        <a asp-page="./Index">Back to List</a>
    </form>
       </dt>
    </dl>
   
   

</div>


</div>


